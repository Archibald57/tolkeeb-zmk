
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include "includes/behaviors.dtsi" // Home-row mods, ...
#include "includes/macros.dtsi"    // Accent macros

#define DEF_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3
#define FN_L 4
#define FR_L 5

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                    &kp Y      &kp O       &kp F      &kp B          &kp K     &kp Q       &kp L       &kp V
&kp J   &lt FN_L U &hm LALT I &hm LCTRL A &hm LGUI C &kp G          &kp M     &hm RGUI T  &hm RCTRL N &hm LALT S  &lt FR_L R  &kp Z
        &kp W       &kp COMMA  &kp PERIOD  &kp        &trans         &trans    &kp D       &kp H       &kp X       &kp SQT

                                        &sk LSHIFT    &lt NAV_L E    &lt NUM_L SPACE  &lt_bs SYM_L 0
                                                      &kp STAR       &kp SLASH
            >;
        };

        nav_layer {
            label = "Navigation";
            bindings = <
                       &kp GRAVE  &kp UP      &kp PAGE_UP     &kp PAGE_DOWN &kp C_VOL_UP    &kp C_MUTE     &trans      &trans
&trans     &kp HOME   &kp LEFT   &kp DOWN    &kp RIGHT       &kp END       &kp C_VOL_DN    &trans         &trans      &trans     &kp RIGHT_SHIFT &trans
           &trans     &trans     &kp LG(C)   &kp LG(V)     &trans  &trans   &kp C_STOP      &kp C_PREV     &kp C_NEXT  &kp C_PP

                                                  &trans          &trans        &trans          &trans
                                                  &trans &trans
            >;
        };

        math_layer {
            label = "Math";
            bindings = <
                           &trans         &trans      &trans          &trans        &kp KP_DIVIDE   &kp N7     &kp N8      &kp N9
&trans                &trans     &trans         &trans      &trans          &trans        &kp KP_MULTIPLY &kp N4     &kp N5      &kp N6     &kp EQUAL &trans
                &trans     &trans         &trans      &trans &trans &trans                                        &kp N1     &kp N2      &kp N3     &kp PLUS

                                                      &trans          &kp N0        &trans          &trans
                                                      &trans &trans
            >;
        };

        sym_layer {
            label = "Symbols";
            bindings = <
                           &trans         &trans      &trans          &trans        &kp KP_DIVIDE   &kp BSLH   &kp PIPE    &kp CARET
&trans                &trans     &trans         &trans      &trans          &trans        &kp KP_MULTIPLY &kp EXCL   &kp QMARK   &kp AMPS   &kp PERCENT &trans
                &trans     &trans         &trans      &trans &trans &trans                                        &kp DOLLAR &kp HASH    &kp AT     &kp PLUS

                                                      &trans          &trans        &trans          &trans
                                                      &trans &trans
            >;
        };

        fn_layer {
            label = "Fn keys";
            bindings = <
                           &trans     &trans      &trans          &trans       &trans          &kp F7         &kp F8      &kp F9
&trans                &trans     &trans     &trans      &trans          &trans       &trans          &kp F4         &kp F5      &kp F6     &trans &trans
                &trans     &trans     &trans      &trans &trans &trans                                       &kp F1         &kp F2      &kp F3     &trans

                                                  &trans          &trans       &trans          &trans
                                                  &trans &trans
            >;
        };
        
        french_layer {
            label = "French";
            bindings = <
                           &trans     &o_circ     &trans          &trans       &trans          &trans         &trans      &trans
       &trans         &u_grave   &i_circ    &a_grave    &kp RA(C)       &trans       &trans          &trans         &trans      &trans     &trans &trans
                &u_circ    &i_circ    &a_circ     &trans &trans &trans                                       &trans         &trans      &trans     &trans

                                                  &e_circ        &e_grave     &trans          &trans
                                                  &trans &trans
            >;
        };
        
    };

    combos {
        compatible = "zmk,combos";

        // This need to be the 1st entry for the yq command in README to work
        combo_caps_word {
            timeout-ms = <50>;
            key-positions = <18 25>;
            bindings = <&kp CAPSLOCK>;
            layers = <0>;
        };

        combo_top_left_left {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp J>;
            layers = <0>;
        };

        combo_top_left_right {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp SEMICOLON>;
            layers = <0>;
        };

        combo_top_right_left {
            timeout-ms = <50>;
            key-positions = <5 6>;
            bindings = <&kp MINUS>;
            layers = <0>;
        };

        combo_top_right_right {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp Z>;
            layers = <0>;
        };

        combo_bottom_right_left {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp RET>;
            layers = <0>;
        };

        // Braces combos
        combo_col_0 {
            timeout-ms = <50>;
            key-positions = <0 9>;
            bindings = <&kp LEFT_BRACKET>;
            layers = <0>;
        };

        combo_col_2 {
            timeout-ms = <50>;
            key-positions = <1 10>;
            bindings = <&kp LEFT_PARENTHESIS>;
            layers = <0>;
        };

        combo_col_3 {
            timeout-ms = <50>;
            key-positions = <2 11>;
            bindings = <&kp LEFT_BRACE>;
            layers = <0>;
        };

        combo_col_4 {
            timeout-ms = <50>;
            key-positions = <5 14>;
            bindings = <&kp RIGHT_BRACE>;
            layers = <0>;
        };

        combo_col_5 {
            timeout-ms = <50>;
            key-positions = <6 15>;
            bindings = <&kp RIGHT_PARENTHESIS>;
            layers = <0>;
        };

        combo_col_6 {
            timeout-ms = <50>;
            key-positions = <7 16>;
            bindings = <&kp RIGHT_BRACKET>;
            layers = <0>;
        };

        // Extra exotic combos
        combo_thumbs {
            timeout-ms = <50>;
            key-positions = <27 29>;
            bindings = <&e_acute>;
            layers = <0>;
        };

        combo_left_thumb {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp SLASH>;
            layers = <0>;
        };

        combo_right_thumb {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp TAB>;
            layers = <0>;
        };

        // Vim-inspired (old J-K)
        combo_exit {
            timeout-ms = <50>;
            key-positions = <21 20>;
            bindings = <&kp ESC>;
            layers = <0>;
        };

        // combo_left_diagonal_up {
        //     timeout-ms = <50>;
        //     key-positions = <2 10>;
        //     bindings = <&e_acute>;
        //     layers = <0>;
        // };

        // combo_left_diagonal_down {
        //     timeout-ms = <50>;
        //     key-positions = <10 21>;
        //     bindings = <&e_grave>;
        //     layers = <0>;
        // };

        // combo_left_pinky {
        //     timeout-ms = <50>;
        //     key-positions = <0 8>;
        //     bindings = <&a_grave>;
        //     layers = <0>;
        // };
    };
};
